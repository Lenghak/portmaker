---
import { PUBLIC_APP_NAME } from 'astro:env/client';
import { ClientRouter } from 'astro:transitions';
import { cn } from '@packages/utils/cn';

const { className, ...props } = Astro.props;
---

<script is:inline>
  const getThemePreference = () => {
    if (
      typeof localStorage !== "undefined" &&
      localStorage.getItem("theme") !== "system"
    ) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  // Handle Astro page transitions
  document.addEventListener("astro:before-swap", (ev) => {
    const isDark = document.documentElement.classList.contains("dark");
    ev.newDocument.documentElement.classList.toggle("dark", isDark);
  });
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&family=Lora:ital,wght@0,400..700;1,400..700&family=Recursive:wght@300..1000&display=swap"
      rel="stylesheet"
    />
    <title>{PUBLIC_APP_NAME}</title>
    <link
      href="/logo-light.svg"
      rel="icon"
      type="image/svg+xml"
      media="(prefers-color-scheme: light)"
    />
    <link
      href="/logo-dark.svg"
      rel="icon"
      type="image/svg+xml"
      media="(prefers-color-scheme: dark)"
    />
    <ClientRouter />
  </head>
  <body
    class={cn(
      "relative flex h-dvh w-dvw flex-col items-center justify-center overflow-hidden",
      className
    )}
    {...props}
  >
    <slot />
  </body>
</html>
